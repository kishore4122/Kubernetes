Exam Links
***********
Certified Kubernetes Administrator: https://www.cncf.io/certification/cka/ 
Exam Curriculum (Topics): https://github.com/cncf/curriculum
Candidate Handbook:
https://www.cncf.io/certification/candidate-handbook
Exam Tips: http://training.linuxfoundation.org/go//Important-Tips-CKA-CKAD



kubectl is a command line utility used to communicate with Kubernetes API servers to create, read, update, delete(CRUD) workloads within Kubernetes.

List of commands:
-----------------
	$kubectl --help

version:
	$kubectl version
	$kubectl version --short

Cluster-info:
	$kubectl cluster-info 
	$kubectl cluster-info dump > dump.txt
	$cat dump.txt

ComponentStatuses:
	$kubectl get componentstatuses

Node:
	$kubectl get nodes
	$kubectl get nodes -o wide
	$kubectl get nodes -o json
	$kubectl get nodes -o yaml

pods:
	$kudectl get pods

API resources:
	$kubectl api-resources
	$kubectl api-resources --help
	$kubectl api-versions

	$kubectl api-resources --namespaced=true
	$kubectl api-resources --namespaced=false
	$kubectl api-resources -o name
	$kubectl api-resources -o wide
	$kubectl api-resources --verbs=list,get

get-information about Objects:
	$kubectl explain pods

	$kubectl explain <Object>.<option>
	$kubectl explain pods.spec
	$kubectl explain pods.apiVersion



kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create          Create a resource from a file or from stdin
  expose          Take a replication controller, service, deployment or pod and expose it as a new Kubernetes service
  run             Run a particular image on the cluster
  set             Set specific features on objects

Basic Commands (Intermediate):
  explain         Get documentation for a resource
  get             Display one or many resources
  edit            Edit a resource on the server
  delete          Delete resources by file names, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout         Manage the rollout of a resource
  scale           Set a new size for a deployment, replica set, or replication controller
  autoscale       Auto-scale a deployment, replica set, stateful set, or replication controller

Cluster Management Commands:
  certificate     Modify certificate resources.
  cluster-info    Display cluster information
  top             Display resource (CPU/memory) usage
  cordon          Mark node as unschedulable
  uncordon        Mark node as schedulable
  drain           Drain node in preparation for maintenance
  taint           Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe        Show details of a specific resource or group of resources
  logs            Print the logs for a container in a pod
  attach          Attach to a running container
  exec            Execute a command in a container
  port-forward    Forward one or more local ports to a pod
  proxy           Run a proxy to the Kubernetes API server
  cp              Copy files and directories to and from containers
  auth            Inspect authorization
  debug           Create debugging sessions for troubleshooting workloads and nodes

Advanced Commands:
  diff            Diff the live version against a would-be applied version
  apply           Apply a configuration to a resource by file name or stdin
  patch           Update fields of a resource
  replace         Replace a resource by file name or stdin
  wait            Experimental: Wait for a specific condition on one or many resources
  kustomize       Build a kustomization target from a directory or URL.

Settings Commands:
  label           Update the labels on a resource
  annotate        Update the annotations on a resource
  completion      Output shell completion code for the specified shell (bash, zsh or fish)

Other Commands:
  alpha           Commands for features in alpha
  api-resources   Print the supported API resources on the server
  api-versions    Print the supported API versions on the server, in the form of "group/version"
  config          Modify kubeconfig files
  plugin          Provides utilities for interacting with plugins
  version         Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).



Cluster
---------
    kubectl version --short --client 
    kubectl version --client
    kubectl version -o yaml
    kubectl get componentstatuses
    kubectl get nodes
    kubectl get nodes -o yaml (or json)
    kubectl cluster-info
    kubectl cluster-info dump --output-directory=/path/to/cluster-state --> Dump current cluster state to /path/to/cluster-state

Events
-------
  kubectl get events
  kubectl get events --watch
  kubectl get events -A
  kubectl get events -n <namespace>


man pages
----------
List all K8s API supported Objects and Versions 
    kubectl api-resources
    kubectl api-versions

Man pages for objects
    kubectl explain <object>.<option> 
    kubectl explain pod
    kubectl explain pod. apiVersion 
    kubectl explain pod. spec

  kubectl api-resources --namespaced=true   # All namespaced resources
  kubectl api-resources --namespaced=false  # All non-namespaced resourceps
  kubectl api-resources -o name             # All resources with simple output (just the resource name)
  kubectl api-resources -o wide             # All resources with expanded output
  kubectl api-resources --verbs-list, get   # Allresources that support the "list" and "get" request verbs
  kubectl api-resources --api-group-extensions  # All resources in the "extensions" API group



Bash Auto Completion
---------------------
https://learnk8s.io/blog/kubectl-productivity

source <(kubect] completion bash) setup autocomplete in bash into the current shell, bash-completion package should be installed first. 
source <(kubectl completion zsh)
source <(kubect] completion bash | sed s/kubectl/k/g) # if k is used as alias for kubectl
echo "source <(kubectl completion bash)" >> ~/.bashrc # add autocomplete permanently to your bash shell.

https://www.civo.com/account/kubernetes
https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#config 
https://nikgrozev.com/2019/10/03/switch-between-multiple-kubernetes-clusters-with-ease/
 

 
